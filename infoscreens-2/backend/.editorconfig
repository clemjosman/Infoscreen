
##################
#     VESACT     #
##################

[api*.{cs,vb}]
# VESACT Enum Naming Convention #

dotnet_naming_rule.api_should_start_wit_api.severity = error
dotnet_naming_rule.api_should_start_wit_api.symbols = class_to_prefix
dotnet_naming_rule.api_should_start_wit_api.style = start_with_api

dotnet_naming_style.start_with_api.required_prefix = api
dotnet_naming_style.start_with_api.required_suffix = 
dotnet_naming_style.start_with_api.word_separator = _
dotnet_naming_style.start_with_api.capitalization = pascal_case

dotnet_naming_symbols.class_to_prefix.applicable_kinds = class
dotnet_naming_symbols.class_to_prefix.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.class_to_prefix.required_modifiers = 


[*.{cs,vb}]
dotnet_analyzer_diagnostic.severity = default

# VESACT Enum Naming Convention #

dotnet_naming_rule.enum_should_be_begins_with_e.severity = error
dotnet_naming_rule.enum_should_be_begins_with_e.symbols = enum_to_prefix
dotnet_naming_rule.enum_should_be_begins_with_e.style = begins_with_e

dotnet_naming_style.begins_with_e.required_prefix = e
dotnet_naming_style.begins_with_e.required_suffix = 
dotnet_naming_style.begins_with_e.word_separator = _
dotnet_naming_style.begins_with_e.capitalization = pascal_case

dotnet_naming_symbols.enum_to_prefix.applicable_kinds = enum
dotnet_naming_symbols.enum_to_prefix.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.enum_to_prefix.required_modifiers = 


# VESACT Async Naming Convention # 

dotnet_naming_rule.async_should_have_suffix.severity = error
dotnet_naming_rule.async_should_have_suffix.symbols = async_methods
dotnet_naming_rule.async_should_have_suffix.style = ends_with_api

dotnet_naming_style.ends_with_api.required_prefix =
dotnet_naming_style.ends_with_api.required_suffix = Async
dotnet_naming_style.ends_with_api.word_separator = _
dotnet_naming_style.ends_with_api.capitalization = pascal_case

dotnet_naming_symbols.async_methods.applicable_kinds = method
dotnet_naming_symbols.async_methods.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.async_methods.required_modifiers = async




##################
#    STANDARD    #
##################

[*.{cs,vb}]
#### Naming styles ####
# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = warning
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = warning
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

# Naming styles

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case
dotnet_style_operator_placement_when_wrapping = beginning_of_line

tab_width = 4
indent_size = 4
end_of_line = crlf
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:silent

[*.cs]
csharp_indent_labels = one_less_than_current
csharp_using_directive_placement = outside_namespace:silent
csharp_prefer_simple_using_statement = true:suggestion
csharp_prefer_braces = true:silent
csharp_style_namespace_declarations = block_scoped:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent